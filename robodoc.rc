#*****************************************************************************************
#****h* JSON/robodoc
#
#  NAME
#    robodoc.rc
#
#  DESCRIPTION
#    Example robodoc.rc file for Fortran
#
#  NOTES
#    Fortran keywords, statements, data types, intrinsic procedures, etc. from:
#     [1] http://fortranwiki.org/fortran/show/Keywords
#     [2] A. M. Gorelik, "Statements, data types and intrinsic procedures
#         in the Fortran standards (1966-2008)", ACM SIGPLAN Fortran Forum,
#         Volume 33 Issue 3, December 2014.
#
#  SEE ALSO
#    ROBODoc website: http://rfsber.home.xs4all.nl/Robo/
#    ROBODoc manual:  http://rfsber.home.xs4all.nl/Robo/manual.html
#
#  AUTHOR
#    Jacob Williams, 3/1/2015
#
#  SOURCE

ignore files:
    *~
    #*#
items:
    AUTHOR
    BUGS
    COPYRIGHT
    DESCRIPTION
    EXAMPLE
    HISTORY
    INPUT
    INPUTS
    LICENSE
    MODIFIED
    NAME
    NOTES
    OUTPUT
    OUTPUTS
    REFERENCES
    RESULT
    SEE ALSO
    USAGE
    USES
    WARNINGS
source line comments:
    !
headertypes:
    h  "Modules"          robo_modules     4
    d  "Parameters"       robo_definitions 3
    c  "Classes"          robo_classes     2
    I  "Interfaces"       robo_interfaces  1
options:
    --multidoc
    --html
    --ignore_case_when_linking
    --syntaxcolors
    --source_line_numbers
    --index
    --tabsize 4
    --sections
    --nopre
keywords:
    abs
    abstract
    achar
    acos
    acosh
    adjustl
    adjustr
    aimag
    aint
    all
    allocatable
    allocate
    allocated
    anint
    any
    asin
    asinh
    assign
    associate
    associated
    asynchronous
    atan
    atan2
    atanh
    atomic_define
    atomic_ref
    backspace
    bessel_j0
    bessel_j1
    bessel_jn
    bessel_y0
    bessel_y1
    bessel_yn
    bge
    bgt
    bind
    bit_size
    ble
    block
    block data
    blt
    btest
    call
    case
    case default
    ceiling
    char
    character
    class
    close
    cmplx
    codimension
    command_argument_count
    common
    complex
    conjg
    contains
    contiguous
    continue
    cos
    cosh
    count
    cpu_time
    critical
    cshift
    cycle
    data
    date_and_time
    dble
    deallocate
    deferred
    digits
    dim
    dimension
    do
    do concurrent
    do while
    dot_product
    double precision
    dprod
    dshiftl
    dshiftr
    elemental
    else
    else if
    elseif
    elsewhere
    end
    end associate
    end block
    end block data
    end critical
    end do
    end enum
    end forall
    end function
    end if
    end interface
    end module
    end program
    end select
    end submodule
    end subroutine
    end type
    end where
    endfile
    endif
    entry
    enum
    enumerator
    eoshift
    epsilon
    equivalence
    erf
    erfc
    erfc_scaled
    error stop
    execute_command_line
    exit
    exp
    exponent
    extends
    extends_type_of
    external
    final
    findloc
    floor
    flush
    forall
    format
    fraction
    function
    gamma
    generic
    get_command
    get_command_argument
    get_environment_variable
    go to
    goto
    huge
    hypot
    iachar
    iall
    iand
    iany
    ibclr
    ibits
    ibset
    ichar
    ieor
    if
    image_index
    implicit
    implicit none
    import
    include
    index
    inquire
    int
    integer
    intent
    interface
    intrinsic
    ior
    iparity
    is_contiguous
    is_iostat_end
    is_iostat_eor
    ishft
    ishftc
    kind
    lbound
    lcobound
    leadz
    len
    len_trim
    lge
    lgt
    lle
    llt
    lock
    log
    log_gamma
    log10
    logical
    maskl
    maskr
    matmul
    max
    maxexponent
    maxloc
    maxval
    merge
    merge_bits
    min
    minexponent
    minloc
    minval
    mod
    module
    module procedure
    modulo
    move_alloc
    mvbits
    namelist
    nearest
    new_line
    nint
    non_overridable
    none
    nopass
    norm2
    not
    null
    nullify
    num_images
    only
    open
    operator
    optional
    pack
    parameter
    parity
    pass
    pause
    pointer
    popcnt
    poppar
    precision
    present
    print
    private
    procedure
    product
    program
    protected
    public
    pure
    radix
    random_number
    random_seed
    range
    read
    real
    recursive
    repeat
    reshape
    result
    return
    rewind
    rewrite
    rrspacing
    save
    scale
    scan
    select
    select case
    select type
    selected_char_kind
    selected_int_kind
    selected_real_kind
    sequence
    set_exponent
    shape
    shifta
    shiftl
    shiftr
    sign
    sin
    sinh
    size
    spacing
    spread
    sqrt
    stop
    storage_size
    submodule
    subroutine
    sum
    sync all
    sync images
    sync memory
    system_clock
    tan
    tanh
    target
    then
    this_image
    tiny
    trailz
    transfer
    transpose
    trim
    type
    type_as
    ubound
    ucobound
    unlock
    unpack
    use
    value
    verify
    volatile
    wait
    where
    while
    write

#*****************************************************************************************